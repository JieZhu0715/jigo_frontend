{"version":3,"sources":["utils/costants.js","actions/shared.js","actions/items.js","components/itemsPage.js","actions/users.js","components/header.js","components/layout.js","components/profilePage.js","components/userRegisterPage.js","components/userCard.js","actions/orders.js","components/itemDetailPage.js","actions/request.js","components/itemRequestPage.js","components/userOrdersPage.js","components/userRequestsPage.js","components/broker_site/header.js","components/broker_site/layout.js","components/broker_site/itemEditPage.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["getAPIPath","endpoint","actionStarted","type","actionSuccess","data","payload","Object","objectSpread","actionFailure","error","END_POINT","Meta","ItemsPage","cardOnClick","key","_this","props","history","push","this","listItems","_this2","loading","react_default","a","createElement","items","list","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","Item","card","_id","hoverable","onClick","cover","alt","src","image_url","title","name","description","Component","mapDispatchToprops","dispatch","axios","get","concat","then","res","catch","err","message","connect","state","withRouter","login","user","callback","post","logout","currentUser","window","sessionStorage","userInfo","JSON","parse","undefined","FormItem","es_form","Header","LoginForm","_this$props","visible","onCancel","onCreate","form","getFieldDecorator","modal","footer","es_button","onSubmit","handleSubmit","className","rules","required","input","prefix","icon","style","color","placeholder","valuePropName","initialValue","es_checkbox","WrappedLoginForm","create","UserHeader","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showModal","setState","handleCancel","event","formRef","validateFields","values","console","log","stringify","resetFields","saveFormRef","float","avatar","backgroundColor","verticalAlign","size","row","justify","col","span","Link","to","wrappedComponentRef","users","colorList","SubMenu","Content","Sider","LayoutPage","onMenuClick","layout","header","breakpoint","collapsedWidth","width","background","menu","mode","defaultSelectedKeys","defaultOpenKeys","height","borderRight","padding","margin","minHeight","children","ProfilePage","onLogoutClick","bordered","email","introduce","UserRegisterPage","handleOk","e","handleReset","preventDefault","register","compareToFirstPassword","rule","value","getFieldValue","validateToNextPassword","force","id","userRegisterPage_FormItem","validator","htmlType","onOk","WrappedRegisterPage","success_callback","error_callback","UserCard","user_id","findUser","itemCreatedBy","getUserOrders","ItemDetailPage","current_user","display_item","wechat","item_id","order","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","highlight","code","hljs","highlightAuto","match","params","getItem","textAlign","fontSize","fontWeight","userCard","created_by","dangerouslySetInnerHTML","__html","content","itemDetailPage_FormItem","input_number","min","WrappedItemDetailPage","displayItem","new_order","ItemRequestPage","request","itemRequestPage_FormItem","WrappedItemRequestPage","new_request","Userorders","itemLayout","user_orders","createdAt","quantity","status","UserOrdersPage","UserordersComponent","mapStateToProps","orders","UserRequestsPage","header_FormItem","header_Header","header_WrappedLoginForm","broker_site_header","layout_Sider","layout_SubMenu","layout_Content","ItemEditPage","getSmdeValue","smde","setSmdeValue","addItem","document","getElementById","SimpleMDE","element","childElementCount","autofocus","autosave","previewRender","plainText","formItemLayout","labelCol","wrapperCol","user_type","itemEditPage_FormItem","assign","label","marginBottom","rows","WrappedItemEditPage","App","BrowserRouter","Switch","Route","exact","path","render","components_layout","itemsPage","component","RegisterPage","itemRequestPage","profilePage","itemDetailPage","userOrdersPage","userRequestsPage","broker_site_layout","itemEditPage","Boolean","location","hostname","combined","combineReducers","default","arguments","length","action","register_succes","loggerMiddleware","createLogger","reducerInitializedStore","createStore","applyMiddleware","thunk","ReactDOM","es","store","initializedStore","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2728dbf0.chunk.js","sourcesContent":["// Backend api \nconst BACKEND_SERVER = 'https://jigo-backend.herokuapp.com/'\n\nexport const getAPIPath = (endpoint => BACKEND_SERVER + endpoint)\n\nexport const getDevAPIPAth = (endpoint =>'http://localhost:8889/' + endpoint)","export const actionStarted = (type) => ({\n    type,\n})\n\nexport const actionSuccess = (type, data) => ({\n    type, \n    payload: {\n        ...data, \n    }\n})\n\nexport const actionFailure = (type, error) => ({\n    type, \n    payload: { error }\n})\n","import axios from 'axios';\nimport { getAPIPath } from '../utils/costants'\nimport { actionStarted, actionSuccess, actionFailure} from './shared'\n\n// Action types \nexport const LIST_ITEMS_STARTED = 'LIST_ITEMS_STARTED';\nexport const LIST_ITEMS_SUCCESS = 'LIST_ITEMS_SUCCESS';\nexport const LIST_ITEMS_FAILURE = 'LIST_ITEMS_FAILURE';\nexport const ADD_NEW_ITEM_STARTED = 'ADD_NEW_ITEM_STARTED';\nexport const ADD_NEW_ITEM_SUCCESS = 'ADD_NEW_ITEM_SUCCESS';\nexport const ADD_NEW_ITEM_FAILURE = 'ADD_NEW_ITEM_FAILURE';\nexport const GET_ITEM_STARTED = 'GET_ITEM_STARTED';\nexport const GET_ITEM_SUCCESS = 'GET_ITEM_SUCCESS';\nexport const GET_ITEM_FAILURE = 'GET_ITEM_FAILURE';\n\n// API items \nconst END_POINT = getAPIPath('items')\n\n// Actions\nexport const getItem = (_id) => (\n    dispatch => {\n        dispatch(actionStarted(GET_ITEM_STARTED));\n        axios.get(`${END_POINT}/find?_id=${_id}`)\n        .then(res => {\n            // TODO try timeout\n            dispatch(actionSuccess(GET_ITEM_SUCCESS, res.data));\n        })\n        .catch(err => {\n            dispatch(actionFailure(GET_ITEM_FAILURE, err.message));\n        })\n    } \n)\n\nexport const listItems = () => (\n    // (dispatch, getState)\n    dispatch => {\n        dispatch(actionStarted(LIST_ITEMS_STARTED));\n        axios.get(`${END_POINT}/all`)\n        .then(res => {\n            // TODO try timeout\n            dispatch(actionSuccess(LIST_ITEMS_SUCCESS, res.data));\n        })\n        .catch(err => {\n            dispatch(actionFailure(LIST_ITEMS_FAILURE, err.message));\n        })\n    }\n)\n\nexport const addItem = (item, callback) => (\n    dispatch => {\n        dispatch(actionStarted(ADD_NEW_ITEM_STARTED))\n        axios.post(`${END_POINT}/add`, item)\n        .then(res => {\n            dispatch(actionSuccess(ADD_NEW_ITEM_SUCCESS, res.data))\n            callback()\n        })\n        .catch(error => {\n            dispatch(actionFailure(ADD_NEW_ITEM_FAILURE, error.message))\n        })\n    }\n)\n\n// Reducer\nexport const itemsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case LIST_ITEMS_STARTED:\n            return {\n                ...state, \n                loading: true\n            };\n        case LIST_ITEMS_SUCCESS: \n            return {\n                ...state,\n                loading: false, \n                items: action.payload.data,\n                message: action.payload.message\n            }; \n        case LIST_ITEMS_FAILURE: \n            return {\n                ...state, \n                loading: false, \n                error: action.payload.error,\n            };\n        case GET_ITEM_STARTED:\n            return {\n                ...state, \n                loading: true\n            };\n        case GET_ITEM_SUCCESS: \n            return {\n                ...state,\n                loading: false, \n                displayItem: action.payload.data,\n                message: action.payload.message\n            }; \n        case GET_ITEM_FAILURE: \n            return {\n                ...state, \n                loading: false,\n                error: action.payload.error,\n            }\n\n        default:\n            return state;\n    }\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { connect } from 'react-redux'\nimport { List, Card } from 'antd';\nimport { listItems } from '../actions/items'\n\nconst { Meta } = Card;\n\nclass ItemsPage extends Component\n{\n    componentDidMount() {\n        this.props.listItems();\n    }    \n\n    cardOnClick = (key) => {\n        // console.log(card.key)\n        this.props.history.push('/item/' + key)\n    }\n\n    render() {\n        if (this.props.loading)\n        {\n            return (<div>Loading items</div>);\n        }\n        else if (this.props.error)\n        {\n            return (<div>Loading items failed : {this.props.error}</div>); \n        }\n        else if (this.props.items)\n        {   \n            return (\n                <List\n                    grid={{ gutter: 50, xs: 1, sm: 2, md: 4, lg: 4, xl: 6, xxl: 3, }}\n                    dataSource={ this.props.items }\n                    renderItem={ item => (\n                        <List.Item>\n                            <Card \n                                key = { item._id }\n                                hoverable  \n                                onClick = { () => this.cardOnClick(item._id) }\n                                cover={ <img alt=\"example\" src={ item.image_url } /> }\n                                // actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}\n                            > \n                                <Meta title={ item.name } description={ item.description }/>\n                            </Card>\n                        </List.Item>)}\n                />\n            );\n        }\n        else\n        {\n            return (<div>No items found</div>);\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    items: state.items.items,\n    message: state.items.message,\n    loading: state.items.loading, \n    error: state.items.error,\n});\n\n// https://react-redux.js.org/using-react-redux/connect-mapdispatch\nconst mapDispatchToprops = {\n    listItems, \n}\nexport default connect(mapStateToProps, mapDispatchToprops)(withRouter(ItemsPage));","import axios from 'axios';\nimport { getAPIPath } from '../utils/costants'\nimport { actionStarted, actionSuccess, actionFailure} from './shared'\n\n// Action types \nexport const LOGIN_STARTED = 'LOGIN_STARTED';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIST_ITEMS_FAILURE';\nexport const REGISTER_STARTED = 'REGISTER_STARTED';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\nexport const FIND_USER_STARTED = 'FIND_USER_STARTED';\nexport const FIND_USER_SUCCESS = 'FIND_USER_SUCCESS';\nexport const FIND_USER_FAILURE = 'FIND_USER_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const CURRENT_USER = 'CURRENT_USER'\n\n\n// API items \nconst END_POINT = getAPIPath('users')\n\n// Actions\nexport const register = (values, success_callback, error_callback) => (\n    dispatch => {\n        dispatch(actionStarted(REGISTER_STARTED));\n        axios.post(`${END_POINT}/register`, values)\n        .then(res => {\n            dispatch(actionSuccess(REGISTER_SUCCESS, res.data));\n            if(success_callback) success_callback();\n        })\n        .catch(err => {\n            dispatch(actionFailure(REGISTER_FAILURE, err.message));\n            if (error_callback) error_callback();\n        })\n    }\n)\nexport const login = (user, callback) => (\n    // (dispatch, getState)\n    dispatch => {\n        dispatch(actionStarted(LOGIN_STARTED));\n        axios.post(`${END_POINT}/login`, user)\n        .then(res => {\n            // TODO try timeout\n            dispatch(actionSuccess(LOGIN_SUCCESS, res.data));\n            callback()\n        })\n        .catch(err => {\n            dispatch(actionFailure(LOGIN_FAILURE, err.message));\n        })\n    }\n)\n\nexport const findUser = (_id, callback) => (\n    // (dispatch, getState)\n    dispatch => {\n        dispatch(actionStarted(FIND_USER_STARTED));\n        axios.get(`${END_POINT}/findUser?_id=${_id}`)\n        .then(res => {\n            dispatch(actionSuccess(FIND_USER_SUCCESS, res.data));\n            callback && callback()\n        })\n        .catch(err => {\n            dispatch(actionFailure(FIND_USER_FAILURE, err.message));\n        })\n    }\n)\n\nexport const logout = () => (\n    {\n        type: LOGOUT,\n    }\n)\n\nexport const currentUser = (callback) => (\n    dispatch => {\n        dispatch({\n            type: CURRENT_USER,\n            payload: {\n                user: (window.sessionStorage.userInfo ? JSON.parse(window.sessionStorage.userInfo) : undefined)\n            }\n        })\n        if (callback)\n        {\n            callback();\n        }\n    }\n) \n\n\n// Reducer\nexport const usersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case LOGIN_STARTED:\n            return {\n                ...state, \n                loading: true\n            };\n        case LOGIN_SUCCESS: \n            // console.log(action)\n            let userInfo = action.payload.data\n            let user = {\n                name: userInfo.name,\n                avatar: userInfo.avatar, \n                email: userInfo.email, \n                _id: userInfo._id,\n                introduce: userInfo.introduce,\n                user_type: userInfo.user_type,\n            }\n            return {\n                ...state,\n                loading: false, \n                user,\n                error: undefined\n            }; \n        case LOGIN_FAILURE: \n            return {\n                ...state, \n                loading: false, \n                error: action.payload.error,\n            };\n        case REGISTER_SUCCESS: \n            return {\n                ...state,\n                register_succes: true,\n                error: undefined\n            }; \n        case REGISTER_FAILURE: \n            return {\n                ...state, \n                register_succes: false, \n                error: action.payload.error,\n            };\n\n        case FIND_USER_SUCCESS: \n            return {\n                ...state,\n                loading: false, \n                itemCreatedBy: action.payload.data,\n                error: undefined\n            }; \n        case FIND_USER_FAILURE: \n            return {\n                ...state, \n                loading: false, \n                itemCreatedBy: 'anonymous',\n                error: action.payload.error,\n            };\n        case LOGOUT: \n            return {\n                ...state, \n                user: undefined\n            }\n        case CURRENT_USER: \n            return {\n                ...state, \n                user: action.payload.user\n            }\n        default:\n            return state;\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { Form, Layout, Icon, Avatar, Button, Row, Col, Modal, Input, Checkbox } from 'antd';\n\nimport { currentUser } from '../actions/users'\nimport { login } from '../actions/users'\n\nconst FormItem = Form.Item;\nconst { Header } = Layout;\n\nclass LoginForm extends Component {\n    render() {\n        const {\n            visible, onCancel, onCreate, form, loading\n          } = this.props;\n        const { getFieldDecorator } = form;\n        \n        return (\n            <Modal\n                visible={visible}\n                title=\"Login\"\n                footer={[\n                <Button key=\"back\" onClick={onCancel}>取消</Button>,\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={onCreate}> 登陆 </Button>,]}\n            >\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <FormItem>\n                    {getFieldDecorator('email', {\n                    rules: [{ required: true, message: '请输入有效邮箱!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"邮箱\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('password', {\n                    rules: [{ required: true, message: '请输入密码!' }],\n                    })(\n                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('remember', {\n                    valuePropName: 'checked',\n                    initialValue: true,\n                    })(\n                        <Checkbox className='login-form-register-remember'>Remember me</Checkbox>\n                    )}\n                        <a className=\"login-form-forgot\">Forgot password</a>\n                    </FormItem>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nconst WrappedLoginForm = Form.create()(LoginForm);\n\n\nclass UserHeader extends Component {\n    constructor(props) \n    {\n        super(props)\n        this.state = { visible: false, loading: false }\n    }\n    \n    componentDidMount() \n    {\n        this.props.currentUser()\n    }\n\n    showModal = () => {\n        this.setState({ visible: true });\n    }\n\n    handleCancel = event => {\n        this.setState({ visible: false})\n    }\n    \n    handleSubmit = event => {\n        const form = this.formRef.props.form;\n        form.validateFields((err, values) => {\n          if (err) {\n            return;\n          }\n    \n          console.log('Received values of form: ', values);\n          this.setState({ loading: true })\n          console.log(this.props.login)\n          this.props.login(values, () => {\n                  // Set front end session\n                  window.sessionStorage.userInfo = JSON.stringify(this.props.user)\n                  form.resetFields();\n                  this.setState({ visible: false });\n              })\n        });\n      }\n\n    saveFormRef = (formRef) => {\n        this.formRef = formRef;\n    }\n      \n    render() {\n        return (\n        <Header className=\"header\">\n            <div className=\"logo\" />\n              {\n                  this.props.user && \n                  (\n                    <div style={{ float: 'right'}} >\n                                                <Avatar style={{ backgroundColor: this.props.color, verticalAlign: 'middle' }} size=\"large\">\n                            { this.props.user.name }\n                        </Avatar>\n                    </div>\n                  )\n              }\n              {\n                  !this.props.user && \n                  (\n                    <div>\n                    <Row type=\"flex\" justify=\"end\">\n                        <Col span={ 2 }>\n                            <Button onClick= { this.showModal }> 登陆 </Button>\n                        </Col>\n                        <Col span={ 2 }>\n                            <Button type='primary'><Link to=\"/register\"> 注册 </Link></Button>\n                        </Col>\n                    </Row>\n                    <WrappedLoginForm\n                        wrappedComponentRef={this.saveFormRef}\n                        visible={ this.state.visible }\n                        loading={ this.state.loading }\n                        onCancel={ this.handleCancel }\n                        onCreate={ this.handleSubmit }\n                    />\n                    </div>\n                  ) \n              }\n        </Header>)\n    }\n}\n\nconst mapStateToProps = state => {\n    let user = state.users.user\n    let colorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\n    return {\n        user,\n        color: user ? colorList[user._id % 4] : colorList[0],\n        loading: state.users.loading,\n        error: state.users.loading,\n    }\n}\n\nexport default connect(mapStateToProps, { login, currentUser })(UserHeader)","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { Layout, Menu, Icon, } from 'antd';\nimport UserHeader from './header'\n  \nconst { SubMenu } = Menu;\nconst { Content, Sider } = Layout;\n\nclass LayoutPage extends Component\n{   \n    onMenuClick = item => {\n        // Jump to main page\n        this.props.history.push('/' + item.key);\n    }\n\n    render() {\n        return (\n            <Layout>\n                <UserHeader />\n              <Layout>\n                <Sider breakpoint=\"lg\" collapsedWidth=\"0\" width={200} style={{ background: '#fff' }}>\n                  <Menu\n                    // theme=\"dark\"\n                    mode=\"inline\"\n                    defaultSelectedKeys={['1']}\n                    defaultOpenKeys={['items']}\n                    style={{ height: '100%', borderRight: 0 }}\n                    onClick={ this.onMenuClick }\n                  >\n                    <SubMenu key=\"items\" title={<span><Icon type=\"user\" />Buy</span> }>\n                      <Menu.Item key=\"items\">浏览商品</Menu.Item>\n                      <Menu.Item key=\"request_item\">添加其他</Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"manage\" title={<span><Icon type=\"user\" />管理</span> }>\n                      <Menu.Item key=\"profile\"><Icon type=\"user\"/>用户资料</Menu.Item>\n                      <Menu.Item key=\"orders\">我的订单</Menu.Item>\n                    </SubMenu>\n                  </Menu>\n                </Sider>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                  <Content style={{\n                    background: '#fff', padding: 24, margin: 0, minHeight: 280,\n                  }}\n                  >\n                   { this.props.children }\n                  </Content>\n                </Layout>\n              </Layout>\n            </Layout>\n        )\n    }\n} \n\nexport default withRouter(LayoutPage)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { Button, List} from 'antd';\nimport { logout } from './../actions/users' \n\nimport '../css/App.css';\n\nclass ProfilePage extends Component {\n    \n    onLogoutClick = () => {\n        window.sessionStorage.userInfo = null;\n        this.props.logout();\n        this.props.history.push('/');\n    }\n\n\n    render() {\n      console.log(this.props.user)\n      let { user } = this.props\n      return (\n          <div className=\"App\">\n          { user &&  ( \n              <div>\n                \n                <List\n                  size=\"large\"\n                  header={ <div>Your profile</div> }\n                  // footer={<div>Footer</div>}\n                  bordered\n                  // dataSource={data}\n                  // renderItem={item => (<List.Item>{item}</List.Item>)}\n                >\n                  <List.Item>用户名: { user.name }</List.Item>\n                  <List.Item>邮箱: { user.email }</List.Item>\n                  <List.Item>简介: { user.introduce }</List.Item>\n                  <List.Item>\n                    <Button type=\"Danger\" onClick = { this.onLogoutClick }> 注销用户 </Button>\n                  </List.Item>\n                </List>\n                \n              </div>\n            )\n          }\n          { !user &&  (          \n            <div>\n              登陆以后查看用户资料\n            </div>\n            )\n          }\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n    let user = state.users.user\n    return {\n        user,\n    }\n}\n\nexport default connect( mapStateToProps, { logout })(withRouter(ProfilePage))\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Form, Icon, Input, Button, Modal, } from 'antd';\n\nimport { register } from '../actions/users'\nimport '../css/App.css';\n\nconst FormItem = Form.Item;\n\nclass UserRegisterPage extends Component {\n    \n    constructor(props)\n    {\n        super(props);\n        this.state = {visible: false}\n    }\n\n    showModal = () => {\n        this.setState({\n          visible: true,\n        });\n      }\n    \n    handleOk = (e) => {\n        this.setState({\n          visible: false,\n        });\n        // Jump to main page\n        this.props.history.push('/');\n      }\n    \n    handleCancel = (e) => {\n        this.setState({\n          visible: false,\n        });\n      }\n\n    handleReset = () => {\n        this.props.form.resetFields();\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault();\n      this.props.form.validateFields((err, values) => {\n          console.log(values)\n            if (!err) {\n                this.props.register(values, () => {\n                this.handleReset();\n                this.showModal()\n            })\n        }\n      });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('请确保输入相同密码!');\n        } else {\n          callback();\n        }\n      }\n  \n      validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      }\n    \n    \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      return (\n        <div className=\"App\" id='login-page'>\n           <header className=\"App-header\">\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <FormItem>\n                    {getFieldDecorator('name', {\n                    rules: [{ required: true, message: '请输入用户名' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('email', {\n                    rules: [{ required: true, message: '请输入邮箱用于登陆!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"登录邮箱\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('password', {\n                    rules: [{ required: true, message: '请输入密码!' }, { validator: this.validateToNextPassword, }],\n                    })(\n                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('confirm_password', {\n                    rules: [{ required: true, message: '请重新输入密码' }, { validator: this.compareToFirstPassword, }],\n                    })(\n                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"确认密码\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">注册</Button>\n                    </FormItem>\n                </Form>\n                <Modal\n                    title=\"注册成功\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}>\n                        <p> 您已经成功注册,请返回登. </p>\n                </Modal>\n            </header>\n        </div>\n      );\n    }\n}\n\nconst WrappedRegisterPage = Form.create()(UserRegisterPage);\n\nconst mapStateToProps = (state) => ({\n    user: state.users.user,\n    loading: state.users.loading,\n    error: state.users.loading\n})\n\nexport default connect(mapStateToProps, { register })(WrappedRegisterPage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Avatar } from 'antd';\nimport { findUser } from '../actions/users';\n\nimport '../css/App.css';\n\nclass UserCard extends Component {\n\n    constructor(props)\n    {\n        console.log(props)\n        super(props)\n    }\n\n    componentDidMount() \n    {\n        let { user_id }  = this.props;\n        this.props.findUser(user_id);\n    }\n\n    render() {\n        let { itemCreatedBy } = this.props\n        if (itemCreatedBy)\n        {\n            console.log(this.props.itemCreatedBy);\n            return (\n                <div>\n                        <Avatar className=\"auth-logo\" size=\"small\" icon=\"user\">\n                        </Avatar> \n                        { itemCreatedBy.name } - { itemCreatedBy.introduce }\n\n                </div>\n              );\n        }\n        else\n        {\n            return (<div />); \n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    itemCreatedBy: state.users.itemCreatedBy\n})\n\nexport default connect( mapStateToProps, { findUser } )(UserCard)\n","import axios from 'axios';\nimport { getAPIPath } from '../utils/costants'\nimport { actionStarted, actionSuccess, actionFailure} from './shared'\n\nexport const ORDER_STARTED = 'ORDER_STARTED'\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS'\nexport const ORDER_FAILURE = 'ORDER_FAILURE'\nexport const GET_USER_ORDERS_STARTED = 'GET_USER_ORDERS_STARTED'\nexport const GET_USER_ORDERS_SUCCESS = 'GET_USER_ORDERS_SUCCESS'\nexport const GET_USER_ORDERS_FAILURE = 'GET_USER_ORDERS_FAILURE'\n\n// API items \nconst END_POINT = getAPIPath('orders')\n\n// Actions\nexport const order = (new_order, callback, error_callback) => (\n    dispatch => {\n        dispatch(actionStarted(ORDER_STARTED));\n        axios.post(`${END_POINT}/add`, new_order)\n        .then(res => {\n            dispatch(actionSuccess(ORDER_SUCCESS, res.data))\n            if (callback) \n            {\n                callback()\n            }\n        })\n        .catch(err => {\n            dispatch(actionFailure(ORDER_FAILURE, err.message))\n            if (error_callback) \n            {\n                error_callback() \n            }\n        })\n    }\n)\n\nexport const getUserOrders = (user_id,  callback, error_callback) => (\n    dispatch => {\n        dispatch(actionStarted(GET_USER_ORDERS_STARTED));\n        axios.get(`${END_POINT}/findUserOrders?user_id=${user_id}`)\n        .then(res => {\n            console.log(res.data.data)\n            dispatch(actionSuccess(GET_USER_ORDERS_SUCCESS, res.data))\n            if (callback)\n            {\n                callback()\n            }\n        })\n        .catch(err => {\n            dispatch(actionFailure(GET_USER_ORDERS_FAILURE, err.message))\n            if (error_callback)\n            {\n                error_callback()\n            }\n        })\n    }\n)\n\n\n// Reducer\nexport const ordersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_STARTED:\n            return {\n                ...state, \n                loading: true\n            };\n        case ORDER_SUCCESS: \n            return {\n                ...state,\n                loading: false, \n                order: action.payload.data,\n                message: action.payload.message\n            }; \n        case ORDER_FAILURE: \n            return {\n                ...state, \n                loading: false, \n                error: action.payload.error,\n            };\n        case GET_USER_ORDERS_STARTED: \n            return {\n                ...state, \n                loading: true\n            }\n        case GET_USER_ORDERS_SUCCESS: \n            return {\n                ...state, \n                loading: false, \n                user_orders: action.payload.data, \n                message: action.payload.message,\n            }\n        case GET_USER_ORDERS_FAILURE: \n            return {\n                ...state, \n                loading: false,\n                error: action.payload.error,\n            }\n        default:\n            return state;\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Form, Icon, Input, Button, InputNumber, Modal } from 'antd';\n\nimport marked from 'marked';\nimport hljs from 'highlight.js';\nimport '../css/marked.css';\n\nimport UserCard from './userCard'\nimport { getItem } from '../actions/items'\nimport { order } from '../actions/orders'\nimport { currentUser } from '../actions/users'\n\nconst FormItem = Form.Item;\n\n\nclass ItemDetailPage extends Component {\n    constructor(props)\n    {\n        super(props)\n        this.state = { visible: false }\n    }\n    \n    componentDidMount() {\n\t\t// marked config\n\t\tmarked.setOptions({\n\t\t\trenderer: new marked.Renderer(),\n\t\t\tgfm: true,\n\t\t\ttables: true,\n\t\t\tbreaks: true,\n\t\t\tpedantic: false,\n\t\t\tsanitize: true,\n\t\t\tsmartLists: true,\n\t\t\tsmartypants: false,\n\t\t\thighlight: function(code) {\n\t\t\t\treturn hljs.highlightAuto(code).value;\n\t\t\t},\n        });\n        \n        // Load Item\n        let _id = this.props.match.params._id;\n        this.props.getItem(_id);\n\n        // get current user \n        this.props.currentUser()\n    }\n    \n    \n    showModal = (message) => {\n        this.setState({\n          visible: true,\n          message\n        });\n      }\n    \n    handleOk = (e) => {\n        this.setState({\n          visible: false,\n        });\n      }\n    \n    handleCancel = (e) => {\n        this.setState({\n          visible: false,\n        });\n      }\n\n    handleReset = () => {\n        this.props.form.resetFields();\n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault();\n        let { current_user, display_item } = this.props\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n              if (this.props.current_user)\n              {\n                values.user_id = current_user._id\n              }\n              else\n              {\n                  // Some fake sure id \n                  values.user_id = '5af584ebb62aae2fa8e406a2'\n                  if (!values.email && !values.wechat)\n                  {\n                    this.showModal('您还没有登陆! 游客下单请输入邮箱或者微信.')\n                    return \n                  }\n              }\n              values.item_id = display_item._id \n\n              this.props.order(values, () => {\n                    this.handleReset()\n                    this.showModal('已经成功下单! 工作人员会联系您.')\n              })\n          }\n        });\n    }\n\n\n\n    render() {\n        let { display_item } = this.props;\n        let { getFieldDecorator } = this.props.form;\n        if (!display_item) \n        {\n            return (<div>Loading items</div>)\n        }\n        else\n        {\n            return (\n            <div className=\"content\">\n                <div className=\"header\">\n\t\t\t\t\t<div className=\"title\" style={{ margin: \"20px 0 0\", textAlign: \"center\", fontSize: \"34px\", fontWeight: \"bold\" }}> {display_item.name} </div>\n                </div>\n                <UserCard user_id={ display_item.created_by } />\n                <div\n                id=\"content\"\n                className=\"article-detail\"\n                dangerouslySetInnerHTML={{\n                  __html: display_item.content ? marked(display_item.content) : null,\n                }}\n                />\n                \n                <Form onSubmit={this.handleSubmit} className=\"order-form\">\n\n                    <FormItem>\n                    {getFieldDecorator('email', {\n                    rules: [{ \n                        message: 'Please input your Email!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"邮箱(可选填)\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    {getFieldDecorator('wechat', {\n                    rules: [{ \n                        message: 'Please input your Wechat!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"微信(可选填)\" />\n                    )}\n                    </FormItem>\n\n                    <FormItem>\n                    {getFieldDecorator('quantity', {\n                    rules: [{ required: true, message: 'Select quantity' }],\n                    })(\n                        <InputNumber min={ 1 } placeholder=\"Quantity\" />\n                    )}\n                    </FormItem>\n                \n                    <FormItem>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">下单</Button>\n                    </FormItem>\n\n                </Form>\n                <Modal\n                    title=\"下单完成\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}>\n                        <p> { this.state.message } </p>\n                </Modal>\n            </div>\n            )\n        }\n    }\n}\n\nconst WrappedItemDetailPage = Form.create()(ItemDetailPage);\n\nconst mapStateToProps = state => ({\n    current_user: state.users.user,\n    display_item: state.items.displayItem,\n    message: state.items.message,\n    loading: state.items.loading, \n    error: state.items.error,\n})\n\nexport default connect(mapStateToProps, { getItem, order, currentUser })(WrappedItemDetailPage)\n","import axios from 'axios';\nimport { getAPIPath } from '../utils/costants'\nimport { actionStarted, actionSuccess, actionFailure} from './shared'\n\nexport const REQUEST_STARTED = 'REQUEST_STARTED'\nexport const REQUEST_SUCCESS = 'REQUEST_SUCCESS'\nexport const REQUEST_FAILURE = 'REQUEST_FAILURE'\n\n// API items \nconst END_POINT = getAPIPath('requests')\n\n// Actions\nexport const request = (new_request, callback, error_callback) => (\n    dispatch => {\n        dispatch(actionStarted(REQUEST_STARTED));\n        axios.post(`${END_POINT}/add`, new_request)\n        .then(res => {\n            dispatch(actionSuccess(REQUEST_SUCCESS, res.data))\n            if (callback) \n            {\n                callback()\n            }\n        })\n        .catch(err => {\n            dispatch(actionFailure(REQUEST_FAILURE, err.message))\n            if (error_callback) \n            {\n                error_callback() \n            }\n        })\n    }\n)\n\n// Reducer\nexport const ordersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case REQUEST_STARTED:\n            return {\n                ...state, \n                loading: true\n            };\n        case REQUEST_SUCCESS: \n            return {\n                ...state,\n                loading: false, \n                request: action.payload.data,\n                message: action.payload.message\n            }; \n        case REQUEST_FAILURE: \n            return {\n                ...state, \n                loading: false, \n                error: action.payload.error,\n            };\n        default:\n            return state;\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Form, Icon, Input, InputNumber, Button, Modal, } from 'antd';\nimport { request } from '../actions/request'\n\nimport '../css/App.css';\n\nconst FormItem = Form.Item;\n\nclass ItemRequestPage extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {visible: false}\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let { current_user } = this.props\n        if (!current_user) \n        {\n            this.showModal(\"您还没有登陆, 请登陆发送请求.\")\n        }\n        else \n        {\n            this.props.form.validateFields((err, values) => {\n                if (!err) {\n                      values.user_id = current_user._id\n                      this.props.request(values, () => {\n                        \n                        this.showModal(\"成功请求了一个新商品,我们会添加它到系统.\");\n                        this.handleReset()\n                    })\n                }\n              });\n        }\n    }\n\n    showModal = (message) => {\n        this.setState({\n          visible: true,\n          message: message\n        });\n      }\n    \n    handleOk = (e) => {\n        this.setState({\n          visible: false,\n        });\n      }\n    \n    handleCancel = (e) => {\n        this.setState({\n          visible: false,\n        });\n      }\n\n    handleReset = () => {\n        this.props.form.resetFields();\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n      return (\n        <div className=\"App\">\n            <Form onSubmit={ this.handleSubmit }>\n                    <FormItem>\n                    {getFieldDecorator('description', {\n                    rules: [{ required: true, message: 'Please input some description!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"商品简介\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('reference', {\n                        rules: [{ message: 'Please input your reference' }],\n                    })(\n                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"官网或者其他在售网站(可选填)\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('quantity', {\n                    rules: [{ message: 'Select quantity' }],\n                    })(\n                        <div> <InputNumber style={{ width: '100%' }} placeholder=\"您将购买几件该商品(可选填)\" /> </div>\n                    )}\n                    </FormItem>\n                    <FormItem>\n                        <Button type=\"primary\" htmlType=\"submit\">添加</Button>\n                    </FormItem>\n            </Form>\n            <Modal\n                    title=\"添加请求: \"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={ this.handleCancel }>\n                        <p> { this.state.message } </p>\n            </Modal>\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => ({\n    current_user: state.users.user,\n})\n\n\nconst WrappedItemRequestPage = Form.create()(ItemRequestPage);\n\nexport default connect(mapStateToProps, { request })(WrappedItemRequestPage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { List, Avatar } from 'antd';\n\nimport { getUserOrders } from './../actions/orders'\nimport { currentUser } from '../actions/users'\n\nclass Userorders extends Component {\n    componentDidMount()\n    {\n        this.props.getUserOrders(this.props.user_id)\n    }\n\n    render() \n    {\n        return (\n            <div>\n            <List\n            itemLayout=\"horizontal\"\n            header={ <div>您的订单</div> }\n            size=\"large\"\n            dataSource={this.props.user_orders}\n            renderItem={order => (\n                <List.Item>\n                    <List.Item.Meta\n                    avatar={ <Avatar src={ order.item_id.image_url }/> }\n                    title={ order.item_id.name }\n                />\n                    <div> \n                        <p> 商品名称: { order.item_id.name }</p>\n                        <p> 下单日期: { order.createdAt }</p>\n                        <p> 数量: { order.quantity }</p> \n                        <p> 当前状态: { order.status }</p>\n                    </div>\n                </List.Item>\n                )}\n            />\n            </div>\n        );\n    }\n}\n\nclass UserOrdersPage extends Component {\n\n    render() {\n      return (\n          <div className=\"App\">\n          { this.props.current_user &&  (          \n            <UserordersComponent user_id={ this.props.current_user._id }></UserordersComponent>\n            )\n          }\n          { !this.props.current_user &&  (          \n            <div> 登陆以后查看用户订单 </div>\n            )\n          }\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        current_user: state.users.user,\n        user_orders : state.orders.user_orders,\n    }\n}\n\nconst UserordersComponent = connect( mapStateToProps, {getUserOrders })(Userorders)\n\nexport default connect( mapStateToProps, { currentUser, getUserOrders })(withRouter(UserOrdersPage))\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { logout } from './../actions/users' \n\nimport '../css/App.css';\n\nclass UserRequestsPage extends Component {\n    \n    render() {\n      return (\n          <div className=\"App\">\n          { this.props.user &&  (          \n              <div></div>\n            )\n          }\n          { !this.props.user &&  (          \n            <header className=\"App-header\">\n              You must login to review user profile\n            </header>\n            )\n          }\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => {\n    let user = state.users.user\n    return {\n        user,\n    }\n}\n\nexport default connect( mapStateToProps, { logout })(withRouter(UserRequestsPage))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { Form, Layout, Icon, Avatar, Button, Row, Col, Modal, Input, Checkbox } from 'antd';\n\nimport { currentUser } from '../../actions/users'\nimport { login } from '../../actions/users'\n\nconst FormItem = Form.Item;\nconst { Header } = Layout;\n\nclass LoginForm extends Component {\n    render() {\n        const {\n            visible, onCancel, onCreate, form, loading\n          } = this.props;\n        const { getFieldDecorator } = form;\n        \n        return (\n            <Modal\n                visible={visible}\n                title=\"Login\"\n                footer={[\n                <Button key=\"back\" onClick={onCancel}>取消</Button>,\n                <Button key=\"submit\" type=\"primary\" loading={loading} onClick={onCreate}> 登陆 </Button>,]}\n            >\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <FormItem>\n                    {getFieldDecorator('email', {\n                    rules: [{ required: true, message: '请输入有效邮箱!' }],\n                    })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"邮箱\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('password', {\n                    rules: [{ required: true, message: '请输入你的密码!' }],\n                    })(\n                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n                    )}\n                    </FormItem>\n                    <FormItem>\n                    {getFieldDecorator('remember', {\n                    valuePropName: 'checked',\n                    initialValue: true,\n                    })(\n                        <Checkbox className='login-form-register-remember'>Remember me</Checkbox>\n                    )}\n                        <a className=\"login-form-forgot\" \n                            // href=\"\"\n                        >Forgot password</a>\n                    </FormItem>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nconst WrappedLoginForm = Form.create()(LoginForm);\n\n\nclass UserHeader extends Component {\n    constructor(props) \n    {\n        super(props)\n        this.state = { visible: false, loading: false }\n    }\n    \n    componentDidMount() \n    {\n        this.props.currentUser()\n    }\n\n    showModal = () => {\n        this.setState({ visible: true });\n    }\n\n    handleCancel = event => {\n        this.setState({ visible: false})\n    }\n    \n    handleSubmit = event => {\n        const form = this.formRef.props.form;\n        form.validateFields((err, values) => {\n          if (err) {\n            return;\n          }\n    \n          console.log('Received values of form: ', values);\n          this.setState({ loading: true })\n          console.log(this.props.login)\n          this.props.login(values, () => {\n                  // Set front end session\n                  window.sessionStorage.userInfo = JSON.stringify(this.props.user)\n                  form.resetFields();\n                  this.setState({ visible: false });\n              })\n        });\n      }\n\n    saveFormRef = (formRef) => {\n        this.formRef = formRef;\n    }\n      \n    render() {\n        return (\n        <Header className=\"header\">\n            <div className=\"logo\" />\n              {\n                  this.props.user && \n                  (\n                    <div style={{ float: 'right'}} >\n                        <Button> <Link to=\"/\"> Go to user site </Link> </Button> \n                        <Avatar style={{ backgroundColor: this.props.color, verticalAlign: 'middle' }} size=\"large\">\n                            { this.props.user.name }\n                        </Avatar>\n\n                    </div>\n                  )\n              }\n              {\n                  !this.props.user && \n                  (\n                    <div>\n                    <Row type=\"flex\" justify=\"end\">\n                        <Col span={ 2 }>\n                            <Button onClick= { this.showModal }> 登陆 </Button>\n                        </Col>\n                        <Col span={ 2 }>\n                            <Button type='primary'><Link to=\"/login\"> 注册 </Link></Button>\n                        </Col>\n                    </Row>\n                    <WrappedLoginForm\n                        wrappedComponentRef={this.saveFormRef}\n                        visible={ this.state.visible }\n                        loading={ this.state.loading }\n                        onCancel={ this.handleCancel }\n                        onCreate={ this.handleSubmit }\n                    />\n                    </div>\n                  ) \n              }\n        </Header>)\n    }\n}\n\nconst mapStateToProps = state => {\n    let user = state.users.user\n    let colorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\n    return {\n        user,\n        color: user ? colorList[user._id % 4] : colorList[0],\n        loading: state.users.loading,\n        error: state.users.loading,\n    }\n}\n\nexport default connect(mapStateToProps, { login, currentUser })(UserHeader)","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { Layout, Menu, Icon, } from 'antd';\nimport UserHeader from './header'\n  \nconst { SubMenu } = Menu;\nconst { Content, Sider } = Layout;\n\nclass LayoutPage extends Component\n{   \n    onMenuClick = item => {\n        // Jump to main page\n        this.props.history.push('/broker_site/' + item.key);\n    }\n\n    render() {\n        return (\n            <Layout>\n              <UserHeader />\n              <Layout>\n                <Sider breakpoint=\"lg\" collapsedWidth=\"0\" width={200} style={{ background: '#fff' }}>\n                  <Menu\n                    // theme=\"dark\"\n                    mode=\"inline\"\n                    defaultSelectedKeys={['1']}\n                    defaultOpenKeys={['broker']}\n                    style={{ height: '100%', borderRight: 0 }}\n                    onClick={ this.onMenuClick }\n                  >\n                    <SubMenu key=\"broker\" title={<span><Icon type=\"laptop\" />Pick up requests</span> }>\n                      <Menu.Item key=\"item_edit\">Edit Item</Menu.Item>\n                    </SubMenu> \n                  </Menu>\n                </Sider>\n                <Layout style={{ padding: '0 24px 24px' }}>\n                  <Content style={{\n                    background: '#fff', padding: 24, margin: 0, minHeight: 280,\n                  }}\n                  >\n                   { this.props.children }\n                  </Content>\n                </Layout>\n              </Layout>\n            </Layout>\n        )\n    }\n} \n\nexport default withRouter(LayoutPage)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button, Modal, } from 'antd'\n\nimport SimpleMDE from 'simplemde'\nimport marked from 'marked'\nimport highlight from 'highlight.js'\n\nimport { addItem } from '../../actions/items'\nimport { currentUser } from '../../actions/users'\n\nconst FormItem = Form.Item;\n\nclass ItemEditPage extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() \n    {\n      if (document.getElementById('editor'))\n      {\n        this.setState({ smde: new SimpleMDE({\n          element: document.getElementById('editor').childElementCount,\n          autofocus: true,\n          autosave: true,\n          previewRender(plainText) {\n            return marked(plainText, {\n              renderer: new marked.Renderer(),\n              gfm: true,\n              pedantic: false,\n              sanitize: false,\n              tables: true,\n              breaks: true,\n              smartLists: true,\n              smartypants: true,\n              highlight(code) {\n                return highlight.highlightAuto(code).value;\n              },\n            });\n          },\n        })})\n      }\n      // get current user \n      this.props.currentUser()\n    }\n    \n    getSmdeValue = () => {\n        return this.state.smde.value();\n    }\n    \n    setSmdeValue = content => {\n        this.state.smde.value(content);\n    }\n\n    showModal = () => {\n        this.setState({\n          visible: true,\n        });\n      }\n    \n    handleOk = (e) => {\n        console.log(e);\n        this.setState({\n          visible: false,\n        });\n      }\n    \n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n          visible: false,\n        });\n      }\n\n    handleReset = () => {\n        this.props.form.resetFields();\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            values.content = this.getSmdeValue()\n            values.created_by = this.props.user._id\n            console.log(values)\n          if (!err) {\n              this.props.addItem(values, () => {\n                this.handleReset()\n                this.setSmdeValue('')\n                this.showModal()\n              })\n          }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n          labelCol: {\n            xs: { span: 24 },\n            sm: { span: 2 },\n          },\n          wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 16 },\n          },\n        };\n\n        let { user } = this.props\n        \n        if (!user || user.user_type !== 1)\n        {\n          // TODO validate user_type from server\n          return (\n            <div>You need to be an admin to access this page</div>\n          )\n        }\n        \n      return (\n        <div>\n        <Form onSubmit={this.handleSubmit}>\n        <FormItem {...formItemLayout} label=\"Name\">\n          { getFieldDecorator('name', {\n            rules: [{\n              required: true, message: 'Please input item name!',\n            }],\n          })(\n            <Input />\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Description\">\n          { getFieldDecorator('description')(<Input />) }\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Cover Image\">\n          { getFieldDecorator('image_url', {\n            rules: [{\n              required: true, message: 'Please input item image url!',\n            }],\n          })(\n            <Input />\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Price\">\n          { getFieldDecorator('price', {\n            rules: [{\n              required: true, message: 'Please input item price!',\n            }],\n          })(\n            <Input />\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"Content\">\n            <textarea id=\"editor\" style={{ marginBottom: 20, width: 800 }} size=\"large\" rows={6} ></textarea>\n        </FormItem>\n        <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">Save</Button>\n        </FormItem>\n        </Form>\n        <Modal\n          title=\"Basic Modal\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <p>Add new item successfully</p>\n        </Modal>\n        </div>\n      );\n    }\n}\n\nconst WrappedItemEditPage = Form.create()(ItemEditPage);\nconst mapStateToProps = state => {\n    let user = state.users.user\n    return {\n        user,\n    }\n}\n\nexport default connect(mapStateToProps, { addItem, currentUser })(WrappedItemEditPage)\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport ItemsPage from './components/itemsPage'\nimport Layout from './components/layout'\nimport ProfilePage from './components/profilePage'\nimport RegisterPage from './components/userRegisterPage'\nimport ItemDetailPage from './components/itemDetailPage'\nimport ItemRequestPage from './components/itemRequestPage'\nimport UserOrdersPage from './components/userOrdersPage'\nimport UserRequestsPage from './components/userRequestsPage'\n\nimport BrokerSiteLayout from './components/broker_site/layout'\nimport ItemEditPage from './components/broker_site/itemEditPage'\n\nclass App extends Component {\n\n  render() {\n    return (\n        <BrowserRouter>\n          <Switch >\n            <Route exact path='/' render={ props => <Layout><ItemsPage /></Layout> }/>\n            <Route path='/register' component={ RegisterPage } />\n            <Route path='/items' render={ props => <Layout><ItemsPage /></Layout> }/>\n            <Route path='/request_item' render={ props => <Layout><ItemRequestPage /></Layout>} />\n            <Route path='/profile' render={ props => <Layout><ProfilePage /></Layout> }/>\n            <Route path='/item/:_id' render={ props => <Layout><ItemDetailPage { ...props } /></Layout> }/>\n            <Route path='/orders' render={ props => <Layout><UserOrdersPage /></Layout> }/>\n            <Route path='/requests' render={ props => <Layout><UserRequestsPage /></Layout> }/>\n\n            <Route path='/broker_site/item_edit' render={ props => <BrokerSiteLayout><ItemEditPage { ...props } /></BrokerSiteLayout> } />\n          </Switch>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { itemsReducer } from '../actions/items'\nimport { usersReducer } from '../actions/users'\nimport { ordersReducer } from '../actions/orders'\n// import { requestsReducer } from '../actions/requests'\n\nconst defaultReducer = (state = 0, action) => state;\n\nconst combined = combineReducers({\n    default: defaultReducer,\n    items: itemsReducer,\n    users: usersReducer, \n    orders: ordersReducer\n})\n\nconst loggerMiddleware = createLogger();\n\nconst reducerInitializedStore = \n    createStore(\n        combined,\n        applyMiddleware(thunk, loggerMiddleware))\n// console.log(reducerInitializedStore.getState())\n\nexport default reducerInitializedStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport initializedStore from './redux/store'\n\nReactDOM.render(<Provider store={ initializedStore }><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}